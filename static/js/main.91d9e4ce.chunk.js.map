{"version":3,"sources":["types/TodoStatus.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoStatus","TodoList","todos","selectedTodoId","selectTodo","className","map","id","title","completed","cn","type","onClick","TodoFilter","setPreparedTodos","useState","query","setQuery","debouncedQuery","setDebouncedQuery","status","setStatus","applyQuery","useCallback","debounce","useEffect","todosToFilter","filteredTodos","filter","todo","toLowerCase","includes","All","Completed","Active","prepareTodos","name","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","closeModal","user","setUser","getUserFromServer","a","userId","userFromServer","href","email","App","setTodos","setSelectedTodoId","preparedTodos","isLoading","setIsLoading","isLoadingFailed","setIsLoadingFailed","getTodosFromServer","todosFromServer","find","areTodosReady","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91d9e4ce.chunk.js","sourcesContent":["export enum TodoStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'compeleted',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number;\n  selectTodo: (todoId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  selectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(({ id, title, completed }) => (\n        <tr\n          data-cy=\"todo\"\n          key={id}\n          className={cn({\n            'has-background-info-light': selectedTodoId === id,\n          })}\n        >\n          <td className=\"is-vcentered\">{id}</td>\n          <td className=\"is-vcentered\">\n            {completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={cn('has-text-success', {\n              'has-text-danger': !completed,\n            })}\n            >\n              {title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(id)}\n            >\n              <span className=\"icon\">\n                <i className={cn('far fa-eye', {\n                  'fa-eye-slash': id === selectedTodoId,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport { useCallback, useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport { Todo } from '../../types/Todo';\nimport { TodoStatus } from '../../types/TodoStatus';\n\ntype Props = {\n  todos: Todo[];\n  setPreparedTodos: (todos: Todo[]) => void;\n};\n\nexport const TodoFilter:React.FC<Props> = ({\n  todos,\n  setPreparedTodos,\n}) => {\n  const [query, setQuery] = useState('');\n  const [debouncedQuery, setDebouncedQuery] = useState('');\n  const [status, setStatus] = useState('all');\n\n  const applyQuery = useCallback(\n    debounce(setDebouncedQuery, 500),\n    [],\n  );\n\n  const prepareTodos = (todosToFilter: Todo[]) => {\n    let filteredTodos = todosToFilter;\n\n    if (debouncedQuery) {\n      filteredTodos = todosToFilter.filter(\n        todo => todo.title.toLowerCase().includes(debouncedQuery.toLowerCase()),\n      );\n    }\n\n    switch (status) {\n      case TodoStatus.All:\n        break;\n      case TodoStatus.Completed:\n        filteredTodos = filteredTodos.filter(todo => todo.completed);\n        break;\n      case TodoStatus.Active:\n        filteredTodos = filteredTodos.filter(todo => !todo.completed);\n        break;\n      default:\n        break;\n    }\n\n    return filteredTodos;\n  };\n\n  useEffect(() => {\n    setPreparedTodos(prepareTodos(todos));\n  }, [status, debouncedQuery, todos]);\n\n  const handleQueryChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  const handleSelectClick = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setStatus(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            name=\"status\"\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleSelectClick}\n          >\n            <option value={TodoStatus.All}>All</option>\n            <option value={TodoStatus.Active}>Active</option>\n            <option value={TodoStatus.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          name=\"title\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span\n            className=\"icon is-right\"\n            style={{ pointerEvents: 'all' }}\n          >\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n                setPreparedTodos(todos);\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo;\n  closeModal: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, closeModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const getUserFromServer = async () => {\n    const userFromServer = await getUser(selectedTodo.userId);\n\n    setUser(userFromServer);\n  };\n\n  useEffect(() => {\n    getUserFromServer();\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => closeModal()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={cn({\n                'has-text-success': selectedTodo.completed,\n                'has-text-danger': !selectedTodo.completed,\n              })}\n              >\n                {selectedTodo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [preparedTodos, setPreparedTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingFailed, setIsLoadingFailed] = useState(false);\n\n  const getTodosFromServer = async () => {\n    setIsLoading(true);\n    try {\n      const todosFromServer = await getTodos();\n\n      setIsLoading(false);\n      setTodos(todosFromServer);\n      setPreparedTodos(todosFromServer);\n    } catch (error: unknown) {\n      setIsLoadingFailed(true);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  const selectTodo = (todoId: number) => {\n    setSelectedTodoId(todoId);\n  };\n\n  const closeModal = () => {\n    setSelectedTodoId(0);\n  };\n\n  const selectedTodo = todos.find(todo => todo.id === selectedTodoId) as Todo;\n  const areTodosReady = !isLoading && !isLoadingFailed;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setPreparedTodos={setPreparedTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {isLoadingFailed && (\n                <p>No todos were loaded!</p>\n              )}\n\n              {areTodosReady && (\n                <TodoList\n                  selectTodo={selectTodo}\n                  selectedTodoId={selectedTodoId}\n                  todos={preparedTodos}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoId && (\n        <TodoModal\n          closeModal={closeModal}\n          selectedTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}