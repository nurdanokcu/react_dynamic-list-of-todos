{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","selectTodo","className","map","todo","id","title","completed","cn","type","onClick","TodoFilter","setPreparedTodos","useState","query","setQuery","debouncedQuery","setDebouncedQuery","status","setStatus","applyQuery","useCallback","debounce","useEffect","todosToFilter","filteredTodos","filter","toLowerCase","includes","prepareTodos","handleChange","event","target","name","value","onChange","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","closeModal","user","setUser","getUserFromServer","a","userId","userFromServer","href","email","App","setTodos","setSelectedTodoId","preparedTodos","isLoading","setIsLoading","isLoadingFailed","setIsLoadingFailed","getTodosFromServer","todosFromServer","find","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41b3effd.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number;\n  selectTodo: (todoId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  selectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id, title, completed } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            key={id}\n            className={cn({\n              'has-background-info-light': selectedTodoId === id,\n            })}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-success': completed,\n                'has-text-danger': !completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectTodo(id)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': id !== selectedTodoId,\n                    'fa-eye-slash': id === selectedTodoId,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport { useCallback, useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setPreparedTodos: (todos: Todo[]) => void;\n};\n\nexport const TodoFilter:React.FC<Props> = ({\n  todos,\n  setPreparedTodos,\n}) => {\n  const [query, setQuery] = useState('');\n  const [debouncedQuery, setDebouncedQuery] = useState('');\n  const [status, setStatus] = useState('all');\n\n  const applyQuery = useCallback(\n    debounce(setDebouncedQuery, 500),\n    [],\n  );\n\n  const prepareTodos = (todosToFilter: Todo[]) => {\n    let filteredTodos = todosToFilter;\n\n    if (debouncedQuery) {\n      filteredTodos = todosToFilter.filter(\n        todo => todo.title.toLowerCase().includes(debouncedQuery.toLowerCase()),\n      );\n    }\n\n    if (status !== 'all') {\n      filteredTodos = filteredTodos.filter(\n        todo => todo.completed === (status === 'completed'),\n      );\n    }\n\n    return filteredTodos;\n  };\n\n  useEffect(() => {\n    setPreparedTodos(prepareTodos(todos));\n  }, [status, debouncedQuery, todos]);\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    if (event.target.name === 'title') {\n      setQuery(event.target.value);\n      applyQuery(event.target.value);\n    }\n\n    if (event.target.name === 'status') {\n      setStatus(event.target.value);\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            name=\"status\"\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          name=\"title\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span\n            className=\"icon is-right\"\n            style={{ pointerEvents: 'all' }}\n          >\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n                setPreparedTodos(todos);\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo;\n  closeModal: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, closeModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const getUserFromServer = async () => {\n    const userFromServer = await getUser(selectedTodo.userId);\n\n    setUser(userFromServer);\n  };\n\n  useEffect(() => {\n    getUserFromServer();\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => closeModal()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={cn({\n                'has-text-success': selectedTodo.completed,\n                'has-text-danger': !selectedTodo.completed,\n              })}\n              >\n                {selectedTodo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [preparedTodos, setPreparedTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingFailed, setIsLoadingFailed] = useState(false);\n\n  const getTodosFromServer = async () => {\n    setIsLoading(true);\n    try {\n      const todosFromServer = await getTodos();\n\n      setIsLoading(false);\n      setTodos(todosFromServer);\n      setPreparedTodos(todosFromServer);\n    } catch (error: unknown) {\n      setIsLoadingFailed(true);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  const selectTodo = (todoId: number) => {\n    setSelectedTodoId(todoId);\n  };\n\n  const closeModal = () => {\n    setSelectedTodoId(0);\n  };\n\n  const selectedTodo = todos.find(todo => todo.id === selectedTodoId) as Todo;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setPreparedTodos={setPreparedTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {isLoadingFailed && (\n                <p>No todos were loaded!</p>\n              )}\n\n              {!isLoading && !isLoadingFailed && (\n                <TodoList\n                  selectTodo={selectTodo}\n                  selectedTodoId={selectedTodoId}\n                  todos={preparedTodos}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoId && (\n        <TodoModal\n          closeModal={closeModal}\n          selectedTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}